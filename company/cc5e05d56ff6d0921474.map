{"version":3,"sources":["/Users/mikeamara/projects/authapp/src/service/service.ts","/Users/mikeamara/projects/authapp/src/service/login.ts","/Users/mikeamara/projects/authapp/src/service/courses.ts","/Users/mikeamara/projects/authapp/src/service/deviceInfo.ts","/Users/mikeamara/projects/authapp/src/styles/flex.ts","/Users/mikeamara/projects/authapp/src/styles/colors.ts","/Users/mikeamara/projects/authapp/src/styles/buttons.ts","/Users/mikeamara/projects/authapp/src/styles/measurements.ts","/Users/mikeamara/projects/authapp/src/screens/login.tsx","/Users/mikeamara/projects/authapp/src/helpers/login.helpers.ts","/Users/mikeamara/projects/authapp/src/components/atoms/textComp.tsx","/Users/mikeamara/projects/authapp/src/components/atoms/buttonComp.tsx","/Users/mikeamara/projects/authapp/src/components/atoms/textLogo.tsx","/Users/mikeamara/projects/authapp/src/components/atoms/chapterCard.tsx","/Users/mikeamara/projects/authapp/src/components/atoms/spinner.tsx","/Users/mikeamara/projects/authapp/src/components/header.tsx","/Users/mikeamara/projects/authapp/src/screens/dashboard.tsx","/Users/mikeamara/projects/authapp/src/screens/myAccount.tsx","/Users/mikeamara/projects/authapp/src/screens/chapters/video.tsx","/Users/mikeamara/projects/authapp/src/screens/chapters/chaptersList.tsx","/Users/mikeamara/projects/authapp/src/screens/chapters/index.tsx","/Users/mikeamara/projects/authapp/src/index.tsx","/Users/mikeamara/projects/authapp/App.tsx","/Users/mikeamara/projects/authapp/web-build/register-service-worker.js","/Users/mikeamara/projects/authapp/src/img/logo.png","/Users/mikeamara/projects/authapp/src/img/back.png","/Users/mikeamara/projects/authapp/src/service/index.ts","/Users/mikeamara/projects/authapp/src/service/paths.ts","/Users/mikeamara/projects/authapp/src/reducers/Login.ts","/Users/mikeamara/projects/authapp/src/reducers/courses.ts","/Users/mikeamara/projects/authapp/src/reducers/deviceInfo.ts","/Users/mikeamara/projects/authapp/src/reducers/activePage.ts","/Users/mikeamara/projects/authapp/src/reducers/activeChapter.ts","/Users/mikeamara/projects/authapp/src/reducers/index.ts","/Users/mikeamara/projects/authapp/src/store/store.ts"],"names":["fetchUrl","fetchProps","a","async","url","method","headers","body","fetch","then","response","text","data","JSON","parse","catch","e","error","error_description","res","store","dispatch","type","payload","isLoggedIn","login","password","username","grant_type","protocol","domain","token","chapterNames","getCourses","access_token","cources","transformChapters","chapters","trans","forEach","chapter","i","Object","keys","key","sections","_c","chapterName","chapterNumber","index","section","push","isMobileView","screenWidth","align","colors","textColor","backgroundColor","center","flexStart","mainHeaderHeight","secondaryHeaderHeight","styles","StyleSheet","create","containerDiv","display","alignItems","justifyContent","flexDirection","paddingTop","logoDiv","marginBottom","logoImg","height","resizeMode","width","borderColor","borderWidth","padding","errorMsg","color","Login","props","onLogInSuccess","React","useState","onChangeUsername","onChangePassword","setErrorMsg","isLoading","setIsLoading","handleLogin","useCallback","loggedIn","useLogin","reduxLogin","View","style","Image","source","require","Text","TextInput","onChangeText","placeholder","value","secureTextEntry","ActivityIndicator","size","Button","title","onPress","navigationOptions","headerMode","headerVisible","headerStyle","connect","state","authReducer","Math","round","Dimensions","get","fontSize","TextComp","ref","customStyles","children","button","borderBottomColor","borderBottomWidth","activeButton","buttonText","margin","ButtonComp","active","TouchableOpacity","image","imageText","TextLogo","card","flexBasis","flexGrow","flexShrink","borderRightWidth","borderStyle","minHeight","maxWidth","chaptersText","borderTopWidth","chaptersView","ChapterCard","reduxActivePage","reduxActiveChapter","handleChapterPress","view","page","bind","undefined","map","chap","marginTop","marginRight","marginLeft","Spinner","textSize","textAlign","headerHeight","measurements","imageRow","courses","deviceInfo","navigate","useScrollView","handleLogout","handlePagePressDashboard","handlePagePressMyaccount","handlePagePressSupport","handlePagePressNotes","handlePagePressTechsupport","scrollHeight","Platform","OS","screenHeight","ScrollView","horizontal","snapToStart","showsHorizontalScrollIndicator","contentContainerStyle","Dashboard","navigation","loading","setLoading","setChapters","useEffect","reduxCourses","loadCourses","flexWrap","MyAccount","playerPlaceholder","videoContainer","flex","rightSectionTitle","rightSectionTitleContainer","rightSection","rightSectionMobile","Video","activeChapterTitle","isMobile","chapterText","borderTopColor","activeChapterText","leftSectionContainerTitle","leftSectionTitle","leftSectionChapterList","leftSectionContainerChapterList","backImg","leftSection","leftSectionMobile","getTotal","acc","o","ChaptersList","activeChapter","goToChapterView","goToSectionView","chaptersList","containerRef","useRef","elemHeight","setElemHeight","elems","splice","length","reduce","current","console","log","scrollTo","x","y","animated","accHeight","elem","nativeEvent","layout","chapterTextStyle","chapterIndex","sectionIndex","onLayout","container","containerMobile","Chapters","setChapter","setScreenWidth","MainNavigator","createStackNavigator","screen","AppContainer","createAppContainer","activePage","reduxDeviceInfo","route","setRout","calcDeviceInfo","addEventListener","nav","NavigationActions","routeName","App","persistor","navigator","window","serviceWorker","register","scope","info","module","exports","initialState","action","courcesReducer","deviceInfoReducer","activePageReducer","activeChapterReducer","rootReducer","combineReducers","middleware","thunk","persistConfig","storage","AsyncStorage","whitelist","persistedReducer","persistReducer","createStore","applyMiddleware","persistStore"],"mappings":"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","file":"static/js/app.2268b95c.chunk.js","sourcesContent":["// error: \"invalid_request\"\n// error_description: \"Invalid token\"\nimport { store } from '../store/store';\n\nexport interface Ifetch {\n    url: string;\n    method?: string;\n    headers?: { [S: string]: string };\n    body?: string;\n}\n\nexport const fetchUrl = async (fetchProps: Ifetch) => {\n    const { url, method = 'GET', headers, body } = fetchProps;\n    const res = await fetch(url, {\n        method,\n        headers,\n        body,\n    })\n        .then(response => {\n            return response.text();\n        })\n        .then(data => {\n            return data ? JSON.parse(data) : {};\n        })\n        .catch(e => {\n            return {\n                error: \"invalid_grant\",\n                error_description: e\n            };\n        });\n    if (res.error && res.error_description === \"Invalid token\") {\n        store.dispatch({\n            type: 'LOGGED_IN',\n            payload: { ...{}, isLoggedIn: false },\n        });\n        return false;\n    }\n    return res;\n}","import { protocol, domain, token } from './paths';\nimport { fetchUrl } from \"./service\";\n\nexport interface IloginData {\n    password: string;\n    username: string;\n    grant_type?: string;\n}\n\nexport interface IloginDataOut {\n    access_token?: string;\n    expires_in?: number;\n    refresh_token?: string;\n    scope?: string;\n    token_type?: string;\n    error?: string;\n    error_description?: string;\n}\n\nexport interface Ilogin { payload: IloginDataOut, isLoggedIn: boolean }\n\nexport const login = async (data: IloginData): Promise<IloginDataOut> => {\n    const { password, username, grant_type = 'password' } = data;\n    const url = `${protocol}://${domain}${token}`;\n    return await fetchUrl({\n        url,\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Authorization\": \"Basic d2FMRnVUOWdLZVFlOGhLNE1rY2NFbExOczdLQjJlOlN5b0VlVHhuYWlDMXdLaWhQNEMxaGduMjNQYU9yYw==\"\n        },\n        body: `username=${username}&password=${password}&grant_type=${grant_type}`,\n    });\n}","import { protocol, domain, cources } from './paths';\nimport { fetchUrl } from \"./service\";\n\nexport enum chapterNames {\n    chapter001 = \"chapter001\",\n    chapter002 = \"chapter002\",\n    chapter003 = \"chapter003\",\n    chapter004 = \"chapter004\",\n    chapter005 = \"chapter005\",\n    chapter006 = \"chapter006\",\n    chapter007 = \"chapter007\",\n    chapter008 = \"chapter008\",\n    chapter009 = \"chapter009\",\n    chapter010 = \"chapter010\",\n    chapter011 = \"chapter011\",\n    chapter012 = \"chapter012\",\n    chapter013 = \"chapter013\",\n    chapter014 = \"chapter014\",\n    chapter015 = \"chapter015\",\n    chapter016 = \"chapter016\",\n    chapter017 = \"chapter017\",\n    chapter018 = \"chapter018\",\n    chapter019 = \"chapter019\",\n}\n\nexport type chapterNamesList = keyof typeof chapterNames;\n\nexport interface Ichapter {\n    chapter: string;\n    url: string;\n    title: string;\n    time1x: string;\n    time14x: string;\n    time17x: string;\n    time20x: string;\n    chapterName: string;\n    azureurl: string;\n    awsurl: string;\n    azurl: string;\n}\n\nexport interface ItransformedChaptr {\n    chapters: Ichapter[];\n    chapterName: string,\n    chapterNumber: string;\n    index: number;\n}\n\nexport type Icourse = { [key in keyof typeof chapterNames]: Ichapter[] };\n\nexport const getCourses = async (access_token: string) => {\n    const url = `${protocol}://${domain}${cources}?access_token=${access_token}`;\n\n    return await fetchUrl({ url });\n}\n\nexport const transformChapters = (chapters: Icourse[]): ItransformedChaptr[] => {\n    const trans: ItransformedChaptr[] = [];\n    chapters.forEach((chapter, i) => {\n        const keys = Object.keys(chapter);\n        keys.forEach((key: chapterNamesList) => {\n            const sections = chapter[key];\n            const chapterName = `${i + 1 < 10 ? `0${i + 1}` : i + 1}. ${sections[0].chapterName}`;\n\n            const _c = {\n                chapterName: chapterName,\n                chapterNumber: key,\n                chapters: [],\n                index: i\n            }\n            sections.forEach(section => {\n                _c.chapters.push(section);\n            });\n            trans.push(_c);\n        });\n    });\n    return trans;\n}","export interface Ideviceinfo {\n    screenWidth: number;\n    screenHeight: number;\n}\n\nexport const isMobileView = (screenWidth: number) => {\n    return screenWidth <= 810;\n}","export enum align {\n    stretch = \"stretch\",\n    center = \"center\",\n    flexStart = \"flex-start\",\n    flexEnd = \"flex-end\",\n    baseline = \"baseline\"\n};","export const colors = {\n    black: \"#000000\",\n    white: \"#ffffff\",\n    red: \"#990000\",\n    extraDardGray: \"#222223\",\n    darkGray: \"#353637\",\n    gray: \"#4a4a4a\",\n    lightGray: \"#a9a9a9\",\n    lighterGray: \"#e6e6e6\",\n    lightestGray: \"#f0f0f0\",\n    gold: \"#9e7a1c\",\n    blue: \"#2172ba\",\n    defaults: {\n        textColor: '#222222',\n        backgroundColor: '#ffffff'\n    },\n    success: {\n        textColor: '#4f8a10',\n        backgroundColor: '#dff2bf'\n    },\n    warning: {\n        textColor: '#9f6000',\n        backgroundColor: '#feefb3'\n    },\n    error: {\n        textColor: '#d8000c',\n        backgroundColor: '#ffd2d2'\n    }\n}","import { colors } from \"./colors\";\nimport { align } from \"./flex\";\n\nexport const btn = {\n    link: {\n        backgroundColor: 'tranparent',\n        alignItems: align.center,\n        alignSelf: align.flexStart,\n    },\n    linkText: {\n        color: colors.blue\n    },\n    primary: {\n        backgroundColor: colors.red,\n        padding: 10,\n        borderRadius: 5,\n        alignItems: align.center,\n        alignSelf: align.flexStart,\n    },\n    primaryText: {\n        color: colors.white\n    },\n    secondary: {\n        borderRadius: 10,\n        backgroundColor: colors.gray,\n        alignItems: \"center\",\n        alignSelf: \"flex-start\"\n    }\n}","export const mainHeaderHeight = 55;\nexport const secondaryHeaderHeight = 50;","import React from 'react';\nimport { Button, View, StyleSheet, TextInput, Image, Text, ActivityIndicator } from 'react-native';\nimport { connect } from 'react-redux';\nimport { colors } from '../styles';\nimport { IloginDataOut, Ilogin } from '../service';\nimport { useLogin } from '../helpers/login.helpers';\n\ninterface Iprops {\n    reduxLogin: (Ilogin) => void;\n}\n\nconst styles = StyleSheet.create({\n    containerDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        paddingTop: 50,\n    },\n    logoDiv: { marginBottom: 10 },\n    logoImg: { height: 80, resizeMode: 'contain', width: 120 },\n    username: { width: 200, height: 40, borderColor: 'gray', borderWidth: 1, padding: 5, marginBottom: 10 },\n    password: { width: 200, height: 40, borderColor: 'gray', borderWidth: 1, padding: 5, marginBottom: 10 },\n    errorMsg: { color: colors.error.textColor },\n});\n\nconst Login = (props: Iprops) => {\n    const { username, onChangeUsername, password, onChangePassword, errorMsg = '', isLoading, handleLogin } = useLogin(\n        (payload: IloginDataOut) => {\n            props.reduxLogin({ payload, isLoggedIn: true });\n        }\n    );\n\n    return (\n        <View style={styles.containerDiv}>\n            <View style={styles.logoDiv}>\n                <Image style={styles.logoImg} source={require('../img/logo.png')} />\n            </View>\n            <View>\n                <Text style={styles.errorMsg}>{errorMsg}</Text>\n            </View>\n            <View>\n                <TextInput\n                    style={styles.username}\n                    onChangeText={text => onChangeUsername(text)}\n                    placeholder=\"Username\"\n                    value={username}\n                />\n            </View>\n            <View>\n                <TextInput\n                    style={styles.password}\n                    onChangeText={text => onChangePassword(text)}\n                    placeholder=\"********\"\n                    value={password}\n                    secureTextEntry={true}\n                />\n            </View>\n            <View>\n                {!isLoading ? (\n                    <Button title=\"Login\" onPress={handleLogin} />\n                ) : (\n                    <ActivityIndicator size={'large'} color={colors.warning.textColor} />\n                )}\n            </View>\n        </View>\n    );\n};\n\nLogin.navigationOptions = {\n    headerMode: 'none',\n    navigationOptions: {\n        headerVisible: false,\n    },\n    headerStyle: { display: 'none' },\n};\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.authReducer.loggedIn,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        reduxLogin: (payload: Ilogin) =>\n            dispatch({\n                type: 'LOGGED_IN',\n                payload: payload,\n            }),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { login, IloginDataOut } from \"../service\";\n\nexport const useLogin = (onLogInSuccess: (loggedIn: IloginDataOut) => void) => {\n    const [username, onChangeUsername] = React.useState('');\n    const [password, onChangePassword] = React.useState('');\n    const [errorMsg, setErrorMsg] = React.useState('');\n    const [isLoading, setIsLoading] = React.useState(false);\n\n    const handleLogin = React.useCallback(async () => {\n        if (username && password) {\n            setIsLoading(true);\n            setErrorMsg('');\n            const loggedIn: IloginDataOut = await login({ username, password });\n            setIsLoading(false);\n            if (loggedIn && !loggedIn.error) {\n                onLogInSuccess(loggedIn);\n            }\n            else {\n                setErrorMsg(loggedIn.error_description || 'Incorrect username/password!');\n            }\n        }\n        else {\n            setErrorMsg('Incorrect username/password!');\n        }\n    }, [username, password]);\n\n    return {\n        username,\n        onChangeUsername,\n        password,\n        onChangePassword,\n        errorMsg,\n        setErrorMsg,\n        isLoading,\n        setIsLoading,\n        handleLogin\n    }\n}","import React from \"react\";\nimport { Text, StyleSheet, TextStyle, Dimensions } from \"react-native\";\nimport { colors } from \"../../styles\";\n\nconst screenWidth = Math.round(Dimensions.get(\"window\").width);\n\nconst styles = StyleSheet.create({\n    text: {\n        color: colors.white,\n        fontSize: screenWidth < 550 ? 21 : 16\n    }\n});\n\ninterface Itext {\n    customStyles?: { [S: string]: TextStyle };\n    ref?: any;\n}\n\nconst TextComp: React.FunctionComponent<Itext> = props => {\n    const { ref = null, customStyles } = props;\n    return (\n        <Text ref={ref} style={[styles.text, customStyles]}>\n            {props.children}\n        </Text>\n    );\n};\n\nexport default TextComp;\n","import React from \"react\";\nimport { TouchableOpacity, Text, StyleSheet, View, ViewStyle, TextStyle, GestureResponderEvent } from \"react-native\";\nimport { colors } from \"../../styles\";\nimport TextComp from \"./textComp\";\nimport { GestureHandlerGestureEvent } from \"react-native-gesture-handler\";\n\nconst styles = StyleSheet.create({\n    button: {\n        backgroundColor: colors.black,\n        height: \"100%\",\n        padding: 15,\n        borderBottomColor: colors.black,\n        borderBottomWidth: 2,\n    },\n    activeButton: {\n        backgroundColor: colors.black,\n        height: \"100%\",\n        padding: 15,\n        borderBottomColor: colors.red,\n        borderBottomWidth: 2,\n    },\n    buttonText: {\n        color: colors.white,\n        margin: \"auto\"\n    }\n});\n\ninterface Ibutton {\n    active?: boolean;\n    onPress?: (event: GestureResponderEvent) => void;\n    style?: { [S: string]: ViewStyle | TextStyle };\n}\n\nconst ButtonComp: React.FunctionComponent<Ibutton> = (props) => {\n    const { active = false, onPress = () => { }, style = styles } = props;\n\n    return (\n        <View>\n            <TouchableOpacity style={active ? style.activeButton : style.button} onPress={onPress}>\n                <TextComp customStyles={style.buttonText as { [S: string]: TextStyle }}>{props.children}</TextComp>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nexport default ButtonComp;","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { colors } from \"../../styles\";\n\nconst styles = StyleSheet.create({\n    image: {\n        width: 115,\n        height: \"100%\",\n        padding: 15,\n    },\n    imageText: {\n        color: colors.red,\n        margin: \"auto\",\n        fontSize: 22\n    }\n});\n\nconst TextLogo = () => {\n    return (\n        <View style={styles.image}>\n            <Text style={styles.imageText}>Pathoma</Text>\n        </View>\n    )\n}\n\nexport default TextLogo;","import React from \"react\";\nimport { View, Text, StyleSheet, TextStyle, GestureResponderEvent } from \"react-native\";\nimport { colors } from \"../../styles\";\nimport TextComp from \"./textComp\";\nimport { ItransformedChaptr, IactivePage, IactiveChapter } from \"../../service\";\n\nconst styles = StyleSheet.create({\n    card: {\n        flexBasis: 240,\n        flexGrow: 1,\n        flexShrink: 1,\n        borderRightWidth: 1,\n        borderStyle: \"solid\",\n        borderColor: colors.extraDardGray,\n    },\n    button: {\n        padding: 15,\n        minHeight: 70,\n    },\n    buttonText: {\n        color: colors.blue,\n        maxWidth: 40\n    },\n    chaptersText: {\n        color: colors.lightGray,\n        borderTopWidth: 1,\n        borderColor: colors.extraDardGray,\n        borderStyle: \"solid\",\n        padding: 10\n    },\n    chaptersView: {\n        padding: 15\n    }\n});\n\ninterface Icard {\n    chapter: ItransformedChaptr\n    reduxActivePage: (page: IactivePage) => void;\n    reduxActiveChapter: (chapter: IactiveChapter) => void;\n}\n\nconst ChapterCard: React.FunctionComponent<Icard> = (props) => {\n    const { chapter, reduxActivePage, reduxActiveChapter } = props;\n\n    const handleChapterPress = React.useCallback((chapter) => {\n        const { index } = chapter;\n        reduxActiveChapter({ view: \"section\", chapter: index, section: 0, chapterName: chapter.chapters[0].chapter });\n        reduxActivePage({ page: \"Chapters\" });\n    }, [chapter]);\n\n    return (\n        <View style={styles.card}>\n            <Text style={styles.button} onPress={handleChapterPress.bind(undefined, chapter)}>\n                <TextComp customStyles={styles.buttonText as { [S: string]: TextStyle }}>{chapter.chapterName}</TextComp>\n            </Text>\n            <View style={styles.chaptersView}>\n                {\n                    chapter.chapters.map(chap => {\n                        return (\n                            <TextComp key={chap.title} customStyles={styles.chaptersText as { [S: string]: TextStyle }}>{chap.title}</TextComp>\n                        )\n                    })\n                }\n            </View>\n        </View>\n    )\n}\n\nexport default ChapterCard;","import React from \"react\";\nimport { View, Text, StyleSheet, TextStyle, ActivityIndicator } from \"react-native\";\nimport { colors } from \"../../styles\";\n\nconst styles = StyleSheet.create({\n    view: {\n        width: \"100%\",\n        marginTop: 100,\n        marginBottom: 0,\n        marginRight: \"auto\",\n        marginLeft: \"auto\"\n    }\n});\n\ntype Isize = \"small\" | \"large\";\n\ninterface Itext {\n    text?: string;\n    style?: { [S: string]: TextStyle };\n    size?: Isize;\n    color?: string;\n}\n\nconst Spinner: React.FunctionComponent<Itext> = (props) => {\n    const { style = styles, size = \"small\", text = \"Loading...\", color = colors.white } = props;\n    const textSize = size === \"small\" ? 12 : 42;\n    return (\n        <View style={style.view}>\n            <ActivityIndicator size={size} color={color} />\n            <Text style={{ color: colors.white, fontSize: textSize, textAlign: \"center\" }}>{text}</Text>\n        </View>\n    )\n}\n\nexport default Spinner;\n","import React from \"react\";\nimport { View, ScrollView, StyleSheet, Platform } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Ilogin, IactivePage } from \"../service\";\nimport { colors, measurements } from \"../styles\";\nimport { ButtonComp, TextLogo } from \"./atoms\";\n\nconst headerHeight = measurements.mainHeaderHeight;\n\nconst styles = StyleSheet.create({\n  imageRow: {\n    height: headerHeight,\n    flexDirection: \"row\",\n    marginRight: 62\n  }\n});\n\ninterface Iheader {\n  page: string;\n  navigate: any;\n  reduxLogin: (Ilogin) => void;\n  reduxActivePage: (page: IactivePage) => void;\n  deviceInfo: { screenHeight: number; screenWidth: number };\n  useScrollView?: boolean;\n  isLoading?: boolean;\n}\n\nconst Header: React.FunctionComponent<Iheader> = props => {\n  const {\n    page,\n    navigate,\n    deviceInfo,\n    useScrollView = true,\n    isLoading = false\n  } = props;\n  const handleLogout = React.useCallback(() => {\n    props.reduxLogin({ ...{}, isLoggedIn: false });\n  }, []);\n  const handlePagePressDashboard = React.useCallback(() => {\n    props.reduxActivePage({ page: \"Dashboard\" });\n    navigate(\"Dashboard\", {});\n  }, []);\n  const handlePagePressMyaccount = React.useCallback(() => {\n    props.reduxActivePage({ page: \"MyAccount\" });\n    navigate(\"MyAccount\", {});\n  }, []);\n  const handlePagePressSupport = React.useCallback(() => {\n    navigate(\"support\", {});\n  }, []);\n  const handlePagePressNotes = React.useCallback(() => {\n    navigate(\"notes\", {});\n  }, []);\n  const handlePagePressTechsupport = React.useCallback(() => {\n    navigate(\"techsupport\", {});\n  }, []);\n\n  const scrollHeight =\n    Platform.OS === \"web\"\n      ? { height: deviceInfo.screenHeight - ( !isLoading ? headerHeight : 0 ) }\n      : { minHeight: deviceInfo.screenHeight - ( !isLoading ? headerHeight : 0 ) };\n\n  return (\n    <>\n      {!isLoading && (\n        <View\n          style={{\n            backgroundColor: colors.black,\n            display: \"flex\",\n            height: \"auto\",\n            width: \"100%\",\n            marginTop: Platform.OS === \"web\" ? 0 : 30\n          }}\n        >\n          <ScrollView\n            horizontal={true}\n            snapToStart={true}\n            showsHorizontalScrollIndicator={false}\n          >\n            <View style={styles.imageRow}>\n              <TextLogo />\n              <ButtonComp\n                onPress={handlePagePressDashboard}\n                active={page === \"Dashboard\"}\n              >\n                Dashboard\n              </ButtonComp>\n              <ButtonComp\n                onPress={handlePagePressMyaccount}\n                active={page === \"MyAccount\"}\n              >\n                My Account\n              </ButtonComp>\n              <ButtonComp\n                onPress={handlePagePressSupport}\n                active={page === \"support\"}\n              >\n                Support\n              </ButtonComp>\n              <ButtonComp onPress={handleLogout}>Logout</ButtonComp>\n              <ButtonComp\n                onPress={handlePagePressNotes}\n                active={page === \"notes\"}\n              >\n                Notes\n              </ButtonComp>\n              <ButtonComp\n                onPress={handlePagePressTechsupport}\n                active={page === \"techsupport\"}\n              >\n                Get Technical Support\n              </ButtonComp>\n            </View>\n          </ScrollView>\n        </View>\n      )}\n      {useScrollView ? (\n        <ScrollView\n          contentContainerStyle={{\n            backgroundColor: colors.black,\n            flexGrow: 1,\n            ...scrollHeight\n          }}\n        >\n          {props.children}\n        </ScrollView>\n      ) : (\n        <View\n          style={{\n            backgroundColor: colors.black,\n            flexGrow: 1,\n            ...scrollHeight\n          }}\n        >\n          {props.children}\n        </View>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  // console.log(\"state>>>\", state);\n  return {\n    loggedIn: state.authReducer,\n    courses: state.courses.payload,\n    deviceInfo: state.deviceInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    reduxLogin: (payload: Ilogin) =>\n      dispatch({\n        type: \"LOGGED_IN\",\n        payload: payload\n      })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { View } from \"react-native\";\nimport { getCourses, Icourse, Ilogin, IactivePage, IactiveChapter, transformChapters, ItransformedChaptr } from \"../service\";\nimport Header from \"../components/header\";\nimport { ChapterCard, Spinner } from \"../components/atoms\";\nimport { colors } from '../styles';\n\ninterface Iprops {\n    navigation: any;\n    reduxCourses: (payload: { payload: Icourse }) => void;\n    reduxActivePage: (page: IactivePage) => void;\n    reduxActiveChapter: (chapter: IactiveChapter) => void;\n    loggedIn?: Partial<Ilogin>;\n    courses?: Icourse[];\n}\n\nconst Dashboard = (props: Iprops) => {\n    const { navigate } = props.navigation;\n    const [loading, setLoading] = React.useState(false);\n    const [chapters, setChapters] = React.useState([]);\n\n    React.useEffect(() => {\n        if (props.loggedIn && props.loggedIn.isLoggedIn) {\n            const loadCourses = async () => {\n                const { access_token } = props.loggedIn.payload;\n                const courses = await getCourses(access_token);\n                setChapters(transformChapters(courses || []));\n                props.reduxCourses({ payload: courses });\n                setLoading(false);\n            }\n            setLoading(true);\n            loadCourses();\n        }\n    }, [props.loggedIn]);\n\n    return (\n        <Header page=\"Dashboard\" navigate={navigate} reduxActivePage={props.reduxActivePage} isLoading={loading}>\n            {!loading &&\n                <View style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", alignItems: \"stretch\", justifyContent: \"space-between\", backgroundColor: colors.darkGray }}>\n                    {chapters.map((chapter: ItransformedChaptr) => {\n                        return (\n                            <ChapterCard key={chapter.chapterNumber} chapter={chapter} reduxActivePage={props.reduxActivePage} reduxActiveChapter={props.reduxActiveChapter} />\n                        )\n                    })}\n                </View>\n            }\n            {\n                loading && <Spinner size={\"large\"} />\n            }\n        </Header>\n    );\n}\n\nDashboard.navigationOptions = {\n    headerMode: 'none',\n    navigationOptions: {\n        headerVisible: false,\n    },\n    headerStyle: { display: \"none\" }\n};\n\nconst mapStateToProps = (state) => {\n    // console.log('state>>>', state);\n    return {\n        loggedIn: state.authReducer,\n        courses: state.courses.payload,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        reduxCourses: (payload: Icourse[]) => dispatch({\n            type: 'COURSES_LIST',\n            payload: payload,\n        }),\n        reduxActivePage: (payload: IactivePage) => dispatch({\n            type: 'ACTIVE_PAGE',\n            payload: payload,\n        }),\n        reduxActiveChapter: (payload: IactiveChapter) => dispatch({\n            type: 'ACTIVE_CHAPTER',\n            payload: payload,\n        })\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Platform } from \"react-native\";\nimport { Icourse, Ilogin, IactivePage } from \"../service\";\nimport Header from \"../components/header\";\nimport { TextComp } from \"../components/atoms\";\n\ninterface Iprops {\n    navigation: any;\n    reduxActivePage: (page: IactivePage) => void;\n    loggedIn?: Partial<Ilogin>;\n    courses?: Icourse[];\n}\n\nconst MyAccount = (props: Iprops) => {\n    const { navigate } = props.navigation;\n\n    return (\n        <Header page=\"MyAccount\" navigate={navigate} reduxActivePage={props.reduxActivePage}>\n            <TextComp>My Account</TextComp>\n            <TextComp>{Platform.OS}</TextComp>\n        </Header>\n    );\n}\n\nMyAccount.navigationOptions = {\n    headerMode: 'none',\n    navigationOptions: {\n        headerVisible: false,\n    },\n    headerStyle: { display: \"none\" }\n};\n\nconst mapStateToProps = (state) => {\n    // console.log('state>>>', state);\n    return {\n        loggedIn: state.authReducer,\n        courses: state.courses.payload,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        reduxActivePage: (payload: IactivePage) => dispatch({\n            type: 'ACTIVE_PAGE',\n            payload: payload,\n        }),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccount);","import React from \"react\";\nimport { View, StyleSheet, TextStyle } from \"react-native\";\nimport { TextComp } from \"../../components/atoms\";\nimport { colors } from \"../../styles\";\n\ninterface Iprops {\n    activeChapterTitle: string;\n    isMobile: boolean;\n    videoLink?: string;\n}\n\nconst styles = StyleSheet.create({\n    playerPlaceholder: {\n        fontSize: 112\n    },\n    videoContainer: {\n        flex: 1,\n        backgroundColor: colors.gray\n    },\n    rightSectionTitle: {},\n    rightSectionTitleContainer: {\n        padding: 15,\n    },\n    rightSection: {\n        flex: 3,\n        flexDirection: \"column\"\n    },\n    rightSectionMobile: {\n        flex: 2,\n        flexDirection: \"column\"\n    }\n});\n\nconst Video = (props: Iprops) => {\n    const { activeChapterTitle, isMobile } = props;\n\n    return (\n        <View\n            style={isMobile ? styles.rightSectionMobile : styles.rightSection}\n        >\n            <View style={styles.rightSectionTitleContainer}>\n                <TextComp\n                    customStyles={\n                        styles.rightSectionTitle as {\n                            [S: string]: TextStyle;\n                        }\n                    }\n                >\n                    {activeChapterTitle}\n                </TextComp>\n            </View>\n            <View style={styles.videoContainer}>\n                <TextComp\n                    customStyles={\n                        styles.playerPlaceholder as {\n                            [S: string]: TextStyle;\n                        }\n                    }\n                >\n                    Video Player\n                </TextComp>\n            </View>\n        </View>\n    );\n};\n\nexport default Video;\n","import React, { useCallback } from \"react\";\nimport {\n    View,\n    ScrollView,\n    StyleSheet,\n    TextStyle,\n    Image,\n    TouchableOpacity\n} from \"react-native\";\nimport { Ichapter, ItransformedChaptr, IactiveChapter } from \"../../service\";\nimport { TextComp } from \"../../components/atoms\";\nimport { colors } from \"../../styles\";\n\ninterface Iprops {\n    isMobile: boolean;\n    activeChapter: IactiveChapter;\n    goToChapterView: () => void;\n    chapter: Ichapter[];\n    goToSectionView: (obj: {\n        chapterIndex;\n        chapterNumber;\n        sectionIndex;\n    }) => void;\n    chaptersList: ItransformedChaptr[];\n}\n\nconst styles = StyleSheet.create({\n    chapterText: {\n        padding: 15,\n        borderTopColor: colors.lightGray,\n        borderTopWidth: 1,\n        borderStyle: \"solid\"\n    },\n    activeChapterText: {\n        backgroundColor: colors.red,\n        padding: 15,\n        borderTopColor: colors.lightGray,\n        borderTopWidth: 1,\n        borderStyle: \"solid\"\n    },\n    leftSectionContainerTitle: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: 15\n    },\n    leftSectionTitle: {\n        color: colors.white\n    },\n    leftSectionChapterList: {\n        flex: 1,\n        marginBottom: 50\n    },\n    leftSectionContainerChapterList: {\n        flexDirection: \"column\",\n        flex: 1\n    },\n    backImg: {\n        width: 20,\n        height: 20,\n        resizeMode: \"contain\"\n    },\n    leftSection: {\n        flex: 1,\n        flexDirection: \"column\"\n    },\n    leftSectionMobile: {\n        flex: 2,\n        flexDirection: \"column\",\n        justifyContent: \"space-between\"\n    }\n});\n\nconst getTotal = (acc, o) => {\n    return acc + o;\n};\n\nconst ChaptersList = (props: Iprops) => {\n    const {\n        isMobile,\n        activeChapter,\n        goToChapterView,\n        chapter = [],\n        goToSectionView,\n        chaptersList = []\n    } = props;\n    const containerRef = React.useRef(null);\n    const chapterRef = React.useRef(null);\n    const [elemHeight, setElemHeight] = React.useState([]);\n\n    // const handleScrollView = useCallback(view => {\n    //     setScrollableView(view);\n    // }, []);\n    React.useEffect(() => {\n        const index =\n            activeChapter.view === \"chapter\"\n                ? activeChapter.chapter\n                : activeChapter.section;\n        // setSelectedChapterIndex(index);\n        const elems = elemHeight.splice(0, index);\n        const height =\n            elemHeight && elemHeight.length > 0\n                ? elems.reduce(getTotal, 0)\n                : index * 49;\n        if (containerRef && containerRef.current) {\n            console.log(\"height>>>\", elemHeight, height, index);\n            containerRef.current.scrollTo({\n                x: 0,\n                y: height,\n                animated: true\n            });\n        }\n    }, [containerRef, activeChapter, elemHeight]);\n\n    const accHeight = useCallback((e, i) => {\n        const elem = elemHeight;\n        elem[i] = e.nativeEvent.layout.height;\n        setElemHeight(elem);\n        console.log(e.nativeEvent.layout, i);\n    }, []);\n\n    return (\n        <View style={isMobile ? styles.leftSectionMobile : styles.leftSection}>\n            {activeChapter.view === \"section\" && (\n                <>\n                    <View style={styles.leftSectionContainerTitle}>\n                        <View>\n                            <TextComp\n                                customStyles={\n                                    styles.leftSectionTitle as {\n                                        [S: string]: TextStyle;\n                                    }\n                                }\n                            >\n                                Topics\n                            </TextComp>\n                        </View>\n                        <View>\n                            <TouchableOpacity onPress={goToChapterView}>\n                                <Image\n                                    style={styles.backImg}\n                                    source={require(\"../../img/back.png\")}\n                                />\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                    <View style={styles.leftSectionChapterList}>\n                        <ScrollView\n                            style={styles.leftSectionContainerChapterList}\n                            ref={containerRef}\n                        >\n                            {chapter.map((section, i) => {\n                                const chapterTextStyle =\n                                    activeChapter.section === i\n                                        ? styles.activeChapterText\n                                        : styles.chapterText;\n                                return (\n                                    <TouchableOpacity\n                                        key={i}\n                                        onPress={goToSectionView.bind(\n                                            undefined,\n                                            {\n                                                chapterIndex:\n                                                    activeChapter.chapter,\n                                                chapterNumber:\n                                                    activeChapter.chapterName,\n                                                sectionIndex: i\n                                            }\n                                        )}\n                                    >\n                                        <View onLayout={e => accHeight(e, i)}>\n                                            <TextComp\n                                                customStyles={\n                                                    chapterTextStyle as {\n                                                        [S: string]: TextStyle;\n                                                    }\n                                                }\n                                            >\n                                                {section.title}\n                                            </TextComp>\n                                        </View>\n                                    </TouchableOpacity>\n                                );\n                            })}\n                        </ScrollView>\n                    </View>\n                </>\n            )}\n            {activeChapter.view === \"chapter\" && (\n                <>\n                    <View style={styles.leftSectionContainerTitle}>\n                        <TextComp\n                            customStyles={\n                                styles.leftSectionTitle as {\n                                    [S: string]: TextStyle;\n                                }\n                            }\n                        >\n                            Chapters\n                        </TextComp>\n                    </View>\n                    <View style={styles.leftSectionChapterList}>\n                        <ScrollView\n                            style={styles.leftSectionContainerChapterList}\n                            ref={containerRef}\n                        >\n                            {chaptersList.map((chap, i) => {\n                                const chapterTextStyle =\n                                    activeChapter.chapter === i\n                                        ? styles.activeChapterText\n                                        : styles.chapterText;\n                                return (\n                                    <TouchableOpacity\n                                        key={i}\n                                        onPress={goToSectionView.bind(\n                                            undefined,\n                                            {\n                                                chapterIndex: i,\n                                                chapterNumber:\n                                                    chap.chapterNumber,\n                                                sectionIndex:\n                                                    activeChapter.chapter === i\n                                                        ? activeChapter.section\n                                                        : 0\n                                            }\n                                        )}\n                                    >\n                                        <View onLayout={e => accHeight(e, i)}>\n                                            <TextComp\n                                                customStyles={\n                                                    chapterTextStyle as {\n                                                        [S: string]: TextStyle;\n                                                    }\n                                                }\n                                            >\n                                                {chap.chapterName}\n                                            </TextComp>\n                                        </View>\n                                    </TouchableOpacity>\n                                );\n                            })}\n                        </ScrollView>\n                    </View>\n                </>\n            )}\n        </View>\n    );\n};\n\nexport default ChaptersList;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { View, StyleSheet, Platform } from \"react-native\";\nimport {\n    isMobileView,\n    Icourse,\n    Ideviceinfo,\n    IactivePage,\n    IactiveChapter,\n    transformChapters\n} from \"../../service\";\nimport Header from \"../../components/header\";\nimport { colors, measurements } from \"../../styles\";\nimport Video from \"./video\";\nimport ChaptersList from \"./chaptersList\";\n\ninterface Iprops {\n    navigation: any;\n    reduxActivePage: (page: IactivePage) => void;\n    reduxActiveChapter: (chapter: IactiveChapter) => void;\n    activeChapter?: IactiveChapter;\n    courses?: Icourse[];\n    deviceInfo?: Ideviceinfo;\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: \"row\",\n        flex: 1\n    },\n    containerMobile: {\n        flexDirection: \"column-reverse\",\n        flex: 1\n    }\n});\n\nconst Chapters = (props: Iprops) => {\n    const {\n        courses,\n        activeChapter,\n        navigation,\n        reduxActiveChapter,\n        deviceInfo\n    } = props;\n    const { navigate } = navigation;\n    const [chapter, setChapter] = React.useState(\n        courses[activeChapter.chapter][activeChapter.chapterName]\n    );\n    const [chaptersList] = React.useState(transformChapters(courses));\n    const [screenWidth, setScreenWidth] = React.useState(0);\n\n    const goToChapterView = React.useCallback(() => {\n        reduxActiveChapter({\n            view: \"chapter\",\n            chapter: activeChapter.chapter,\n            section: activeChapter.section,\n            chapterName: activeChapter.chapterName\n        });\n    }, [reduxActiveChapter, activeChapter]);\n\n    const goToSectionView = React.useCallback(\n        ({ chapterIndex, chapterNumber, sectionIndex }) => {\n            reduxActiveChapter({\n                view: \"section\",\n                chapter: chapterIndex,\n                section: sectionIndex,\n                chapterName: chapterNumber\n            });\n        },\n        []\n    );\n\n    React.useEffect(() => {\n        setChapter(courses[activeChapter.chapter][activeChapter.chapterName]);\n    }, [activeChapter]);\n\n    React.useEffect(() => {\n        const { screenWidth } = deviceInfo;\n        setScreenWidth(screenWidth);\n    }, [deviceInfo]);\n\n    const isMobile = isMobileView(screenWidth);\n\n    // console.log(\">>>>>>>\", courses, chapter, activeChapter, chaptersList);\n    return (\n        <Header\n            page=\"Dashboard\"\n            navigate={navigate}\n            reduxActivePage={props.reduxActivePage}\n            useScrollView={false}\n        >\n            <View style={isMobile ? styles.containerMobile : styles.container}>\n                <ChaptersList\n                    isMobile={isMobile}\n                    activeChapter={activeChapter}\n                    goToChapterView={goToChapterView}\n                    chapter={chapter}\n                    goToSectionView={goToSectionView}\n                    chaptersList={chaptersList}\n                />\n                <Video\n                    activeChapterTitle={chapter[activeChapter.section].title}\n                    isMobile={isMobile}\n                />\n            </View>\n        </Header>\n    );\n};\n\nChapters.navigationOptions = {\n    headerMode: \"none\",\n    navigationOptions: {\n        headerVisible: false\n    },\n    headerStyle: { display: \"none\" }\n};\n\nconst mapStateToProps = state => {\n    return {\n        courses: state.courses.payload,\n        activeChapter: state.activeChapter,\n        deviceInfo: state.deviceInfo\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        reduxActivePage: (payload: IactivePage) =>\n            dispatch({\n                type: \"ACTIVE_PAGE\",\n                payload: payload\n            }),\n        reduxActiveChapter: (payload: IactiveChapter) =>\n            dispatch({\n                type: \"ACTIVE_CHAPTER\",\n                payload: payload\n            })\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chapters);\n","import React, { useState } from 'react';\nimport { View, Dimensions, Platform } from 'react-native';\nimport { createAppContainer, NavigationActions } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { Login, Dashboard, MyAccount, Chapters } from \"./screens\";\nimport { Ilogin, Ideviceinfo } from \"./service\";\nimport { connect } from \"react-redux\";\nimport { colors } from './styles';\n\nconst MainNavigator: any = createStackNavigator({\n    Login: { screen: Login },\n    Dashboard: { screen: Dashboard },\n    Chapters: { screen: Chapters },\n    MyAccount: { screen: MyAccount }\n});\n\nconst AppContainer = createAppContainer(MainNavigator);\n\nconst AppWrapper = (props: { loggedIn?: Partial<Ilogin>, reduxDeviceInfo: (Ideviceinfo) => void, activePage: { page: string } }) => {\n    const [route, setRout] = useState('Login');\n\n    const calcDeviceInfo = () => {\n        const screenWidth = Math.round(Dimensions.get('window').width);\n        const screenHeight = Math.round(Dimensions.get('window').height);\n        // console.log('file: src/index.tsx, function: window.addEventListener, screenWidth: ', screenWidth);\n        props.reduxDeviceInfo({\n            screenWidth,\n            screenHeight\n        });\n    }\n\n    React.useEffect(() => {\n        calcDeviceInfo();\n        Dimensions.addEventListener('change', () => {\n            calcDeviceInfo();\n        });\n    }, []);\n\n    React.useEffect(() => {\n        if (props && props.loggedIn && props.loggedIn.isLoggedIn) {\n            setRout(props.activePage.page || 'Dashboard');\n        } else {\n            setRout('Login');\n        }\n    }, [props.loggedIn, props.activePage]);\n\n    return (\n        <View style={{ display: \"flex\", flex: 1, height: \"100%\", backgroundColor: Platform.OS === 'web' ? colors.white : colors.black }}>\n            <AppContainer ref={nav => {\n                nav && nav.dispatch(\n                    NavigationActions.navigate({ routeName: route })\n                )\n            }} />\n        </View>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    // console.log('file: src/index.tsx, function: mapStateToProps, state: ', state);\n    return {\n        loggedIn: state.authReducer,\n        activePage: state.activePage\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        reduxDeviceInfo: (payload: Ideviceinfo) => dispatch({\n            type: 'DEVICE_INFO',\n            payload: payload,\n        }),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppWrapper);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { store, persistor } from './src/store/store';\nimport AppWrapper from \"./src\";\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <PersistGate\n                loading={null}\n                persistor={persistor}\n            >\n                <AppWrapper />\n            </PersistGate>\n        </Provider>\n    );\n}\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.61a69445.png\";","module.exports = __webpack_public_path__ + \"static/media/back.af6d7839.png\";","export * from \"./login\";\nexport * from \"./courses\";\nexport * from \"./deviceInfo\";\nexport * from \"./activePage\";\nexport * from \"./activeChapter\";","const protocol = 'https';\nconst domain = 'www.pathoma.com'; // 'www.pathoma.net'\nconst token = '/oauth/token';\nconst cources = '/oauth/getChapterList';\nconst coursedetail = '/oauth/getChapterLinks';\nconst userinfo = '/oauth/getUserInfo';\nconst supportrequest = '/oauth/postSupportRequest';\n\nexport {\n    protocol,\n    domain,\n    token,\n    cources,\n    coursedetail,\n    userinfo,\n    supportrequest\n}","import { Ilogin } from \"../service\";\n\nconst initialState:Partial<Ilogin> = {\n    isLoggedIn: false,\n};\n\nconst authReducer = (state = initialState, action: {type: string; payload: Ilogin}) => {\n    switch (action.type) {\n        case 'LOGGED_IN': {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default authReducer;","import { Icourse } from \"../service\";\n\nconst initialState: { payload: Icourse[] } = {\n    payload: []\n};\n\nconst courcesReducer = (state = initialState, action: { type: string; payload: Icourse }) => {\n    switch (action.type) {\n        case 'COURSES_LIST': {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default courcesReducer;","import { Ideviceinfo } from \"../service\";\n\nconst initialState:Ideviceinfo = {\n    screenWidth: 0,\n    screenHeight: 0\n};\n\nconst deviceInfoReducer = (state = initialState, action: {type: string; payload: Ideviceinfo}) => {\n    switch (action.type) {\n        case 'DEVICE_INFO': {\n            // console.log('file: src/reducers/deviceInfo.ts, function: deviceInfoReducer, state: ', state);\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default deviceInfoReducer;","import { IactivePage } from \"../service\";\n\nconst initialState: IactivePage = {\n    page: \"Dashboard\"\n};\n\nconst activePageReducer = (state = initialState, action: {type: string; payload: IactivePage}) => {\n    switch (action.type) {\n        case 'ACTIVE_PAGE': {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default activePageReducer;","import { IactiveChapter } from \"../service\";\n\nconst initialState:IactiveChapter = {\n    view: \"section\",\n    chapter: 0,\n    section: 0,\n    chapterName: \"chapter001\"\n};\n\nconst activeChapterReducer = (state = initialState, action: {type: string; payload: IactiveChapter}) => {\n    switch (action.type) {\n        case 'ACTIVE_CHAPTER': {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default activeChapterReducer;","import { combineReducers } from 'redux';\nimport authReducer from './Login';\nimport courses from './courses';\nimport deviceInfo from './deviceInfo';\nimport activePage from './activePage';\nimport activeChapter from './activeChapter';\n\nconst rootReducer = combineReducers({\n    authReducer,\n    courses,\n    deviceInfo,\n    activePage,\n    activeChapter\n});\n\nexport default rootReducer;","import { AsyncStorage } from 'react-native';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport rootReducer from '../reducers/index';\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n}\n\nconst persistConfig = {\n    key: 'root',\n    storage: AsyncStorage,\n    whitelist: [\n        'authReducer',\n    ]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(\n    persistedReducer,\n    applyMiddleware(...middleware),\n);\n\nlet persistor = persistStore(store);\n\nexport {\n    store,\n    persistor,\n};"],"sourceRoot":""}